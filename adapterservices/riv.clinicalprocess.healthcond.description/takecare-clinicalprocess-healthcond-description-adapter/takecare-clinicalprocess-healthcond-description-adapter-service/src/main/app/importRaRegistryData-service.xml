<?xml version="1.0" encoding="utf-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:smooks="http://www.muleforge.org/smooks/schema/mule-module-smooks"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:rest="http://www.mulesoft.org/schema/mule/rest" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/current/mule-jdbc.xsd 
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd 
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.muleforge.org/smooks/schema/mule-module-smooks http://dist.muleforge.org/smooks/schema/mule-module-smooks/1.3/mule-module-smooks.xsd 
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/rest http://www.mulesoft.org/schema/mule/rest/current/mule-rest.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd "
	version="CE-3.3.1">

	<!-- TODO: Add service specific definitions here -->



	<flow name="importRaRegistryData-service" doc:name="importRaRegistryData-service">

		<http:inbound-endpoint connector-ref="soitoolkit-http-connector"
			address="${IMPORTRAREGISTRYDATA_INBOUND_URL}" exchange-pattern="request-response"
			transformer-refs="objToStr logReqIn" responseTransformer-refs="logRespOut"
			doc:name="HTTP" />

		<custom-transformer doc:name="transform-request"
			class="se.skltp.adapterservices.clinicalprocess.healthcond.description.takecareclinicalprocesshealthconddescriptionadapter.importraregistrydata.ImportRaRegistryDataRequestTransformer">
	    <spring:property name="encryptionEnabled" value="${IMPORTRAREGISTRYDATA_ENCRYPTION_ENABLED}" />
	    <spring:property name="encryptionKey" value="${IMPORTRAREGISTRYDATA_ENCRYPTION_KEY}" />
	    <spring:property name="defaultLogicalAddress" value="${IMPORTRAREGISTRYDATA_LOGICAL_ADDRESS}" />
    </custom-transformer>

		<response>
			<transformer ref="objToStr" doc:name="Transform Object to String" />
			<custom-transformer doc:name="transform-response"
				class="se.skltp.adapterservices.clinicalprocess.healthcond.description.takecareclinicalprocesshealthconddescriptionadapter.importraregistrydata.ImportRaRegistryDataResponseTransformer" />
		</response>

		<set-property propertyName="SOAPAction" value="urn:riv:clinicalprocess:healthcond:description:RegisterRaDSDataResponder:1:RegisterRaDSData" doc:name="set SoapAction property"/>
		<copy-properties propertyName="x-vp-auth-cert"  doc:name="Copy property x-vp-auth-cert to outbound" />
		
		<cxf:proxy-client doc:name="SOAP Proxy Client" payload="envelope"  />

		<http:outbound-endpoint connector-ref="soitoolkit-http-connector"
			address="${IMPORTRAREGISTRYDATA_OUTBOUND_URL}" exchange-pattern="request-response"
			responseTimeout="${SERVICE_TIMEOUT_MS}" transformer-refs="logReqOut"
			responseTransformer-refs="logRespIn" doc:name="HTTP">
		</http:outbound-endpoint>

		<custom-exception-strategy
			class="org.soitoolkit.commons.mule.error.ServiceExceptionStrategy" />
	</flow>
</mule>